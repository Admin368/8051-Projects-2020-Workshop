C51 COMPILER V9.60.0.0   _PAULO_CLOCK_V1                                                   07/19/2020 17:31:40 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE _PAULO_CLOCK_V1
OBJECT MODULE PLACED IN .\Objects\[paulo]CLOCK_v1.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE [paulo]CLOCK_v1.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Li
                    -stings\[paulo]CLOCK_v1.lst) TABS(2) OBJECT(.\Objects\[paulo]CLOCK_v1.obj)

line level    source

   1          #include <reg52.h>
   2          #include <string.h>
   3          #include "..\..\headers\paulobetaX5.c"
   4          sbit rs = P2^3;// REGISTER SELECT
   5          sbit rw = P2^4;// READ/WRITE
   6          sbit en = P2^5;// READ/WRITE ENABLE
   7          char data1[]={"DATE 2020/07/18"};
   8          char data2[]={"TIME 00:00"};
   9          char pdelay=10;
  10          char x=0;
  11          void lcd_init();//INITIALIZES LCD
  12          void write_com(char com); //WRITE COMMANDS
  13          void write_data(char _data); // WRITE COMMANDS
  14          void main(){
  15   1        char i;
  16   1        lcd_init();
  17   1        xdelay(20);
  18   1        while(1){
  19   2        //DISPLAY ON LINE 1
  20   2        write_com(0x80+17);
  21   2        xdelay(10);
  22   2        for(i=0;i<=14;i++){
  23   3          write_data(data1[i]);
  24   3          xdelay(10);
  25   3        }
  26   2        //DISPLAY ON LINE 2
  27   2        write_com(0xc0+17);
  28   2        xdelay(10);
  29   2          for(i=0;i<=9;i++){
  30   3            write_data(data2[i]);
  31   3            xdelay(10);
  32   3        }
  33   2      /*
  34   2        data2[9]=x+1;
  35   2        write_com(0xc0+17);
  36   2        xdelay(10);
  37   2        for(i=0;i<=9;i++){
  38   2          write_data(data2[i]);
  39   2          }
  40   2          xseconds(1);
  41   2      */  
  42   2        while(1){}
  43   2        }
  44   1      /*  
  45   1        //SHIFTING DATA
  46   1        for(i=0;i<12+16-11;i++){
  47   1          write_com(0x18);//COM18 SHIFT DATA FROM LEFT TO WRITE
  48   1          xdelay(100);
  49   1        } 
  50   1      */
  51   1      }
  52          void lcd_init(){
  53   1      //PREPARE THE SCREEN -16*2 5*7 MATRIX
  54   1        write_com(0x38);
C51 COMPILER V9.60.0.0   _PAULO_CLOCK_V1                                                   07/19/2020 17:31:40 PAGE 2   

  55   1      //turn on display
  56   1        write_com(0x08);
  57   1      //CLEAR SCREEN
  58   1        //write_com(hex of 1);
  59   1        write_com(1);
  60   1      //PREPARE COURSOR  AND DATA POINTER
  61   1        //INCREMENT CURSOR AFTER ENTER BY SENTING 0X06
  62   1        write_com(0x06);
  63   1        write_com(6);
  64   1        //write_com(0x80);
  65   1        //CURSOR SETUP
  66   1        write_com(0x0c);
  67   1      }
  68          
  69          void write_com(char com){
  70   1      //>TO WRITE DCOMMAND | RS=LOW,RW=LOW ,(SEND DATA),(CREATE PURSE)
  71   1      //>(SEND DATA) WITH P0;
  72   1      // delay by 150 nanoseconds "tpw" 
  73   1        rw=0 ; rs=0; P0 = com;
  74   1        en = 0;
  75   1        xdelay(pdelay);
  76   1        en = 1;
  77   1        xdelay(pdelay);
  78   1        en=0;
  79   1      }
  80          void write_data(char _data){
  81   1      //>TO WRITE DATA (rs=1,rw=0, datat to P0; then send pulse
  82   1        rs=1; rw=0; P0= _data;
  83   1        //PULSE
  84   1        en = 0;
  85   1        xdelay(pdelay);
  86   1        en = 1;
  87   1        xdelay(pdelay);
  88   1        en=0;
  89   1      }
  90            
  91          
  92            


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    913    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     56       5
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
