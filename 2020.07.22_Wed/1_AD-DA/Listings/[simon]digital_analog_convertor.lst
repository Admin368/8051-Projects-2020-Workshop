C51 COMPILER V9.60.0.0   _SIMON_DIGITAL_ANALOG_CONVERTOR                                   07/22/2020 15:03:33 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE _SIMON_DIGITAL_ANALOG_CONVERTOR
OBJECT MODULE PLACED IN .\Objects\[simon]digital_analog_convertor.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE [simon]digital_analog_convertor.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTE
                    -XTEND PRINT(.\Listings\[simon]digital_analog_convertor.lst) TABS(2) OBJECT(.\Objects\[simon]digital_analog_convertor.obj
                    -)

line level    source

   1          #include<reg52.h>
   2          #include<intrins.h>
   3          sbit Scl = P2^1;
   4          sbit Sda = P2^0;
   5          
   6          void icc_start();
   7          void icc_send(char _data);
   8          void icc_ack(); 
   9          void icc_stop();
  10          void DAC(char _byte); 
  11          
  12          void delay(char x);// delay function
  13            
  14          void main()
  15          {
  16   1        int num = 0;
  17   1        char flag = 0;
  18   1        
  19   1        while(1)
  20   1        {
  21   2          //DAC(num);//255--> 1111 1111
  22   2          DAC(0x0f); // u can put hex or just number(1-255)
  23   2          if(num>=255)
  24   2          {
  25   3            flag = 1;
  26   3          }
  27   2          if(num<=0)
  28   2          {
  29   3            flag = 0;
  30   3          }
  31   2          
  32   2          if(flag==1)
  33   2          {
  34   3            num--;
  35   3          }else
  36   2          {
  37   3            num++;
  38   3          }
  39   2          delay(10);
  40   2        }
  41   1      }
  42          void icc_start()
  43          {
  44   1        Scl = 1;
  45   1        _nop_();
  46   1        Sda = 1;
  47   1        _nop_();
  48   1        Sda = 0;
  49   1      }
  50          void icc_send(char _data)
  51          {
  52   1        char oneByte = 8;
  53   1        char temp = 0x80; // 1000 0000
C51 COMPILER V9.60.0.0   _SIMON_DIGITAL_ANALOG_CONVERTOR                                   07/22/2020 15:03:33 PAGE 2   

  54   1        //1000 0000
  55   1        //0XXX XXXX
  56   1        //1XXX XXXX
  57   1        
  58   1        while(oneByte)
  59   1        {
  60   2          Scl = 0;   // added new line 1
  61   2          if((temp&_data)==0)
  62   2          //if(temp&_data==0) // changed this line 
  63   2          {
  64   3            Sda = 0;
  65   3          }
  66   2          else
  67   2          {
  68   3            Sda = 1;
  69   3          }
  70   2          Scl = 0;
  71   2          _nop_();
  72   2          Scl = 1;
  73   2          _nop_();  // added new line 2
  74   2          Scl = 0;  // added new line 3
  75   2          
  76   2          _data = _data<<1;
  77   2          oneByte--;
  78   2        }
  79   1        
  80   1      }
  81          void icc_ack()
  82          {
  83   1        Sda = 0;
  84   1        Scl = 0;
  85   1        _nop_();
  86   1        Scl = 1;
  87   1        _nop_();
  88   1        Scl = 0;
  89   1      }
  90          void icc_stop()
  91          {
  92   1        Scl = 1;
  93   1        _nop_();
  94   1        Sda = 0;
  95   1        _nop_();
  96   1        Sda = 1;
  97   1      }
  98          
  99          void DAC(char _byte)
 100          {
 101   1        icc_start();
 102   1        icc_send(0x90); // write to D/A convertor
 103   1        icc_ack();
 104   1        icc_send(0x40); //enable analog out
 105   1        icc_ack();
 106   1        icc_send(_byte); // send data
 107   1        icc_ack();
 108   1        icc_stop();
 109   1      } 
 110            
 111          void delay(char x)// delay function
 112          {
 113   1        char y;
 114   1        while(x--)
 115   1          for(y =0; y<120; y++);
C51 COMPILER V9.60.0.0   _SIMON_DIGITAL_ANALOG_CONVERTOR                                   07/22/2020 15:03:33 PAGE 3   

 116   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    200    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
